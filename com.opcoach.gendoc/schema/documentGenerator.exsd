<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.opcoach.gendoc" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="com.opcoach.gendoc" id="documentGenerator" name="documentGenerator"/>
      </appinfo>
      <documentation>
         This extension point provides a way to associate a document generator to a selected object. 
It adds the generation command in the associated menu (to be defined) .

For instance :  TimeSheet.odt is associated to a RegistrationObject 

Execution of the corresponding extensions will use the gendoc generator and the associated templates will receive the path to the selected object.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="documentGenerator" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="documentGenerator">
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The ID of this generator
               </documentation>
               <appinfo>
                  <meta.attribute kind="identifier"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the generator (will apper in the menu)
               </documentation>
            </annotation>
         </attribute>
         <attribute name="template" type="string" use="required">
            <annotation>
               <documentation>
                  A link to the odt template or to the word template depending on documentType
               </documentation>
               <appinfo>
                  <meta.attribute kind="resource"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="documentType" use="required">
            <annotation>
               <documentation>
                  The type of document to be generated. The associated template must then be of the right type.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="odt">
                  </enumeration>
                  <enumeration value="docx">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="targetClass" type="string" use="required">
            <annotation>
               <documentation>
                  The class on which this generator must be set. It can be any kind of EObject
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.emf.ecore.EObject"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="outputPath" type="string" use="required">
            <annotation>
               <documentation>
                  Specify the relative path from the selected resource. Use either : 

- &apos;ui&apos; -&gt; to get a dialog to ask user
- &apos;./pathToOutput/${resourceName}.odt&apos; -&gt; relative path from resource location
- /pathToOutput/${resourceName}.odt -&gt; absolute path in the project

Sample : 

Relative to resource:
../src-gen/${resourceName}_report.odt -&gt; will generate /project/src-gen/sample_report.odt for an EObject stored in the /project/model/sample.xxx file

Absolute in project:
/src-gen/${resourceName}_report.odt -&gt; will generate /src-gen/sample_report.odt for an EObject stored in any sample.xxx file stored in the project. 

User interaction : 
ui  -&gt; a resource dialog relative to workspace will be displayed.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         [Enter the first release in which this extension point appears.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
